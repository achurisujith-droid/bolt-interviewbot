import { Certificate } from '../types/interview';

export const generateCertificateNumber = (): string => {
  const prefix = 'AI-CERT';
  const timestamp = Date.now().toString().slice(-8);
  const random = Math.random().toString(36).substring(2, 6).toUpperCase();
  return `${prefix}-${timestamp}-${random}`;
};

export const downloadCertificate = (certificate: Certificate, session?: any): void => {
  console.log('🎯 Certificate download started');
  console.log('📜 Certificate:', certificate);
  console.log('📊 Session:', session);
  
  try {
    // Create a simple text-based certificate for now to test download
    const certificateText = `
AI INTERVIEW EVALUATION REPORT
===============================

Candidate: ${certificate.candidateName}
Position: ${certificate.position}
Overall Score: ${certificate.score}%
Certificate Number: ${certificate.certificateNumber}
Issue Date: ${certificate.issueDate.toLocaleDateString()}
Evaluation Method: ${certificate.evaluationMethod || 'GPT-4o AI Evaluation'}

EVALUATION BREAKDOWN:
- Relevance & Content Quality: 25%
- Communication Skills: 25%  
- Technical/Professional Knowledge: 25%
- Examples & Evidence: 25%

${session?.responses ? `
DETAILED RESPONSES:
${session.responses.map((r: any, i: number) => `
Question ${i + 1}: ${r.question}
Score: ${r.score || 'N/A'}%
Feedback: ${r.feedback || 'No feedback available'}
${r.transcript ? `Transcript: "${r.transcript}"` : 'No transcript available'}
`).join('\n')}
` : ''}

This certificate validates the candidate's performance in the AI-powered interview assessment.

Generated by AI Interview Bot System
Certificate ID: ${certificate.certificateNumber}
Verification: This is an official AI evaluation report
`;

    console.log('📝 Certificate text generated');
    
    // Create blob and download
    const blob = new Blob([certificateText], { type: 'text/plain' });
    const url = URL.createObjectURL(blob);
    
    console.log('🔗 Blob URL created:', url);
    
    // Create download link
    const link = document.createElement('a');
    link.href = url;
    link.download = `AI-Interview-Report-${certificate.candidateName.replace(/\s+/g, '-')}-${certificate.certificateNumber}.txt`;
    
    console.log('📁 Download filename:', link.download);
    
    // Add to DOM and trigger download
    document.body.appendChild(link);
    console.log('🔗 Link added to DOM');
    
    link.click();
    console.log('✅ Download triggered');
    
    // Cleanup
    setTimeout(() => {
      document.body.removeChild(link);
      URL.revokeObjectURL(url);
      console.log('🧹 Cleanup completed');
    }, 100);
    
  } catch (error) {
    console.error('❌ Download failed:', error);
    alert(`Download failed: ${error instanceof Error ? error.message : 'Unknown error'}`);
  }
};

export const generateCertificateCanvas = (certificate: Certificate, session?: any): HTMLCanvasElement => {
  const canvas = document.createElement('canvas');
  const ctx = canvas.getContext('2d')!;
  
  // Set canvas size for detailed report
  canvas.width = 1200;
  canvas.height = 1600;
  
  // Background gradient
  const gradient = ctx.createLinearGradient(0, 0, canvas.width, canvas.height);
  gradient.addColorStop(0, '#f8fafc');
  gradient.addColorStop(1, '#e2e8f0');
  ctx.fillStyle = gradient;
  ctx.fillRect(0, 0, canvas.width, canvas.height);
  
  // Border
  ctx.strokeStyle = '#3B82F6';
  ctx.lineWidth = 8;
  ctx.strokeRect(20, 20, canvas.width - 40, canvas.height - 40);
  
  // Header Section
  ctx.fillStyle = '#1e293b';
  ctx.font = 'bold 32px Arial';
  ctx.textAlign = 'center';
  ctx.fillText('AI INTERVIEW EVALUATION REPORT', canvas.width / 2, 80);
  
  // Candidate Info Section
  ctx.font = 'bold 24px Arial';
  ctx.fillStyle = '#64748b';
  ctx.fillText('CANDIDATE ASSESSMENT', canvas.width / 2, 120);
  
  // Candidate name
  ctx.font = 'bold 28px Arial';
  ctx.fillStyle = '#059669';
  ctx.fillText(certificate.candidateName, canvas.width / 2, 160);
  
  // Position
  ctx.font = 'bold 20px Arial';
  ctx.fillStyle = '#3B82F6';
  ctx.fillText(certificate.position, canvas.width / 2, 190);
  
  // Overall Score Section
  ctx.font = 'bold 36px Arial';
  ctx.fillStyle = certificate.score >= 80 ? '#059669' : certificate.score >= 60 ? '#D97706' : '#DC2626';
  ctx.fillText(`OVERALL SCORE: ${certificate.score}%`, canvas.width / 2, 240);
  
  // Evaluation Method
  ctx.font = '16px Arial';
  ctx.fillStyle = '#64748b';
  const evaluationMethod = certificate.evaluationMethod || 'GPT-4o Standard Evaluation';
  ctx.fillText(`Evaluation Method: ${evaluationMethod}`, canvas.width / 2, 270);
  
  // Certificate details
  ctx.font = '14px Arial';
  ctx.fillText(`Certificate ID: ${certificate.certificateNumber}`, canvas.width / 2, 300);
  ctx.fillText(`Issue Date: ${certificate.issueDate.toLocaleDateString()}`, canvas.width / 2, 320);
  
  return canvas;
};